package user_handlers

import (
	"fmt"
	"github.com/mymmrac/telego"
	tu "github.com/mymmrac/telego/telegoutil"
	"os"
	"strconv"
	"strings"
	"vab/database"
	"vab/database/methods"
	"vab/keyboards"
	"vab/utils"
)

// CatalogMess –ú–µ–Ω—é - –ö–∞—Ç–∞–ª–æ–≥
func CatalogMess(bot *telego.Bot, update telego.Update) {
	utils.DelMessage(bot, update) // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
	_, _ = bot.SendMessage(tu.Message(tu.ID(update.Message.Chat.ID),
		"<b>–ú–µ–Ω—é üìÅ –ö–∞—Ç–∞–ª–æ–≥</b>").WithReplyMarkup(keyboards.Kb_catalog).WithParseMode(telego.ModeHTML))
}

// AboutMess –ú–µ–Ω—é - –û –∫–æ–º–ø–∞–Ω–∏–∏
func AboutMess(bot *telego.Bot, update telego.Update) {
	utils.DelMessage(bot, update) // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
	file := utils.MustOpen("files/vab.png")
	_, _ = bot.SendPhoto(tu.Photo(tu.ID(update.Message.Chat.ID), tu.File(file)))
	_, _ = bot.SendMessage(tu.Message(tu.ID(update.Message.Chat.ID),
		utils.AboutCompany).
		WithReplyMarkup(keyboards.Kb_catalog).WithParseMode(telego.ModeHTML))
}

// MainMenuMess - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
func MainMenuMess(bot *telego.Bot, update telego.Update) {
	utils.DelMessage(bot, update) // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
	_, _ = bot.SendMessage(tu.Message(tu.ID(update.Message.Chat.ID),
		"<b>–ì–ª–∞–≤–Ω–æ–µ üçΩ –º–µ–Ω—é</b>").WithReplyMarkup(keyboards.Kb_main).WithParseMode(telego.ModeHTML))
}

// CabinetMess - –ú–µ–Ω—é –ö–∞–±–∏–Ω–µ—Ç
func CabinetMess(bot *telego.Bot, update telego.Update) {
	utils.DelMessage(bot, update) // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
	_, _ = bot.SendMessage(tu.Message(tu.ID(update.Message.Chat.ID),
		"<b>–ú–µ–Ω—é üë§ –ö–∞–±–∏–Ω–µ—Ç</b>").WithReplyMarkup(keyboards.Kb_—Åabinet).WithParseMode(telego.ModeHTML))
}

// ListOfd - –ú–µ–Ω—é –ø–æ–∫—É–ø–∫–∏ –û–§–î
func ListOfd(bot *telego.Bot, update telego.Update) {
	var (
		ofds, lenOfds = methods.GetDbAllOfd()
		bnOfd         = make([]telego.InlineKeyboardButton, lenOfds)
		bnDesc        = make([]telego.InlineKeyboardButton, lenOfds)
		grid          = make([][]telego.InlineKeyboardButton, lenOfds)
	)

	for index, value := range ofds {
		bnOfd[index] = tu.InlineKeyboardButton(value.OfdName).WithCallbackData("cb_OFD_" + value.OfdName + "_id_" + strconv.Itoa(int(value.ID)))
		bnDesc[index] = tu.InlineKeyboardButton("–û–ø–∏—Å–∞–Ω–∏–µ").WithWebApp(tu.WebAppInfo(value.OfdLink))
		grid[index] = append(grid[index], bnOfd[index], bnDesc[index])
	}

	inlineKeyboard := tu.InlineKeyboardGrid(grid)

	_, _ = bot.SendMessage(tu.Message(tu.ID(update.Message.Chat.ID),
		"<b>–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –û–§–î:</b>").WithReplyMarkup(inlineKeyboard).WithParseMode(telego.ModeHTML))
}

// GetOneOfdCb - —â–µ–ª—á–µ–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –û–§–î
func GetOneOfdCb(bot *telego.Bot, query telego.CallbackQuery) {
	var (
		PeriodName     []models.Period
		Price          []models.Price
		inlineKeyboard = utils.InlineKeyboardButtonSend(
			"üíµ –û–ø–ª–∞—Ç–∏—Ç—å –∫–æ–¥ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ üíµ", "callback_payofd")
	)

	var Code, ofd_name = methods.GetDbOneOfd(query.Data)
	if len(Code) == 0 {
		_, _ = bot.SendMessage(tu.Message(tu.ID(query.Message.GetChat().ID),
			"Ô∏è‚ùóÔ∏è–ö–æ–¥—ã –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –¥–ª—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ "+strings.Split(query.Data, "_")[2]+
				" –û–§–î –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.\n–í–æ–π–¥–∏—Ç–µ –≤ –º–µ–Ω—é üí¨ <b>–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è</b> –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã.").WithParseMode(telego.ModeHTML))
	}
	_ = bot.AnswerCallbackQuery(tu.CallbackQuery(query.ID).WithText(strings.Split(query.Data, "_")[2]))

	for index := range Code {
		models.DB.First(&PeriodName, Code[index].PeriodID)
		models.DB.First(&Price, Code[index].PriceID)
		_, _ = bot.SendMessage(tu.Message(tu.ID(query.Message.GetChat().ID),
			"–ö–æ–¥ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ "+ofd_name+" –û–§–î\n<b>–°—Ä–æ–∫: "+PeriodName[0].PeriodName+"</b>"+
				"\n<b>–¶–µ–Ω–∞: "+Price[0].Price+" —Ä—É–±–ª–µ–π</b>").WithReplyMarkup(inlineKeyboard).WithParseMode(telego.ModeHTML))

		//_, _ = bot.SendMessage(tu.Message(tu.ID(query.Message.GetChat().ID), PeriodName[0].PeriodName))
	}
}

// ConsultationMess - –ú–µ–Ω—é –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è
func ConsultationMess(bot *telego.Bot, update telego.Update) {
	utils.DelMessage(bot, update) // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
	inlineKeyboard := tu.InlineKeyboard(
		tu.InlineKeyboardRow(
			tu.InlineKeyboardButton("–ü—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ –ö–ö–¢").WithCallbackData("cb_cons_PayKKT"),
		),
		tu.InlineKeyboardRow(
			tu.InlineKeyboardButton("–ü—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ –§–ù –∏–ª–∏ –û–§–î").WithCallbackData("cb_cons_PayFnOfd"),
		),
		tu.InlineKeyboardRow(
			tu.InlineKeyboardButton("–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –ö–ö–¢").WithCallbackData("cb_cons_ServKKT"),
		),
		tu.InlineKeyboardRow(
			tu.InlineKeyboardButton("–ë—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ").WithCallbackData("cb_cons_ServBuh"),
		),
	)

	Phone := os.Getenv("VAB_PHONE")
	_, _ = bot.SendMessage(tu.Message(tu.ID(update.Message.Chat.ID),
		"<b>–ú–µ–Ω—é üí¨ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è</b>").WithParseMode(telego.ModeHTML))
	_, _ = bot.SendMessage(tu.Message(tu.ID(update.Message.Chat.ID),
		fmt.Sprintf(utils.Consultation,
			Phone)).WithReplyMarkup(inlineKeyboard).WithParseMode(telego.ModeHTML))

}

// ConsultationCb - –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
func ConsultationCb(bot *telego.Bot, query telego.CallbackQuery) {
	var choice = strings.Split(query.Data, "_")[2]
	VabTgId, _ := strconv.ParseInt(os.Getenv("VAB_TG_ID"), 10, 64)
	inlineKeyboardPeriod := tu.InlineKeyboard(
		tu.InlineKeyboardRow(
			tu.InlineKeyboardButton("üîÇ –û—Ç–≤–µ—Ç–∏—Ç—å –≤ –ª–∏—á–∫—É").WithURL("https://t.me/"+query.From.Username),
		),
		tu.InlineKeyboardRow(
			tu.InlineKeyboardButton("üïù 10 –º–∏–Ω—É—Ç").
				WithCallbackData("cb_cons_Period_"+strconv.Itoa(int(query.From.ID))+"_10 –ú–ò–ù–£–¢"),
			tu.InlineKeyboardButton("üïù 20 –º–∏–Ω—É—Ç").
				WithCallbackData("cb_cons_Period_"+strconv.Itoa(int(query.From.ID))+"_20 –ú–ò–ù–£–¢"),
			tu.InlineKeyboardButton("üïù 30 –º–∏–Ω—É—Ç").
				WithCallbackData("cb_cons_Period_"+strconv.Itoa(int(query.From.ID))+"_30 –ú–ò–ù–£–¢"),
		),
		tu.InlineKeyboardRow(
			tu.InlineKeyboardButton("üïù 1 —á–∞—Å").
				WithCallbackData("cb_cons_Period_"+strconv.Itoa(int(query.From.ID))+"_–ß–ê–°–ê"),
			tu.InlineKeyboardButton("üïù 1 –¥–µ–Ω—å").
				WithCallbackData("cb_cons_Period_"+strconv.Itoa(int(query.From.ID))+"_–î–ù–Ø"),
			tu.InlineKeyboardButton("üïù –í —Ä–∞–±. –¥–µ–Ω—å").
				WithCallbackData("cb_cons_Period_"+strconv.Itoa(int(query.From.ID))+"_–†–ê–ë–û–ß–ï–ì–û –î–ù–Ø"),
		),
	)
	switch choice {
	case "PayKKT":
		inlineKeyboard := utils.ConfirmSend("cb_cons_PayKKTYes")
		_, _ = bot.SendMessage(tu.Message(tu.ID(query.Message.GetChat().ID),
			utils.ConsultationPayKKT).WithReplyMarkup(inlineKeyboard).WithParseMode(telego.ModeHTML))
	case "PayKKTYes":
		_, _ = bot.SendSticker(tu.Sticker(tu.ID(VabTgId),
			tu.FileFromID("CAACAgIAAxkBAAEoaBZlhvb7_eVfDNHhdvVb9zOS834EYAACgQEAAiteUwteCmw-bAABeLQzBA")))
		_, _ = bot.SendMessage(tu.Message(tu.ID(VabTgId),
			fmt.Sprintf(utils.ConsultationPayKKTYes, query.From.FirstName, query.From.LastName)).
			WithReplyMarkup(inlineKeyboardPeriod).WithParseMode(telego.ModeHTML))
		_, _ = bot.SendMessage(tu.Message(tu.ID(query.Message.GetChat().ID),
			utils.ConsultationMesSend).
			WithParseMode(telego.ModeHTML))
	case "PayFnOfd":
		inlineKeyboard := utils.ConfirmSend("cb_cons_PayFnOfdYes")
		_, _ = bot.SendMessage(tu.Message(tu.ID(query.Message.GetChat().ID),
			utils.ConsultationPayFnOfd).WithReplyMarkup(inlineKeyboard).WithParseMode(telego.ModeHTML))
	case "PayFnOfdYes":
		_, _ = bot.SendSticker(tu.Sticker(tu.ID(VabTgId),
			tu.FileFromID("CAACAgIAAxkBAAEoaBZlhvb7_eVfDNHhdvVb9zOS834EYAACgQEAAiteUwteCmw-bAABeLQzBA")))
		_, _ = bot.SendMessage(tu.Message(tu.ID(VabTgId),
			fmt.Sprintf(utils.ConsultationPayFnOfdYes, query.From.FirstName, query.From.LastName)).
			WithReplyMarkup(inlineKeyboardPeriod).WithParseMode(telego.ModeHTML))
		_, _ = bot.SendMessage(tu.Message(tu.ID(query.Message.GetChat().ID),
			utils.ConsultationMesSend).
			WithParseMode(telego.ModeHTML))
	case "ServKKT":
		inlineKeyboard := utils.ConfirmSend("cb_cons_ServKKTYes")

		_, _ = bot.SendMessage(tu.Message(tu.ID(query.Message.GetChat().ID),
			utils.ConsultationServKKT).WithReplyMarkup(inlineKeyboard).WithParseMode(telego.ModeHTML))
	case "ServKKTYes":
		_, _ = bot.SendSticker(tu.Sticker(tu.ID(VabTgId),
			tu.FileFromID("CAACAgIAAxkBAAEoaBZlhvb7_eVfDNHhdvVb9zOS834EYAACgQEAAiteUwteCmw-bAABeLQzBA")))
		_, _ = bot.SendMessage(tu.Message(tu.ID(VabTgId),
			fmt.Sprintf(utils.ConsultationServKKTYes, query.From.FirstName, query.From.LastName)).
			WithReplyMarkup(inlineKeyboardPeriod).WithParseMode(telego.ModeHTML))
		_, _ = bot.SendMessage(tu.Message(tu.ID(query.Message.GetChat().ID),
			utils.ConsultationMesSend).
			WithParseMode(telego.ModeHTML))
	case "ServBuh":
		inlineKeyboard := utils.ConfirmSend("cb_cons_ServBuhYes")

		_, _ = bot.SendMessage(tu.Message(tu.ID(query.Message.GetChat().ID),
			utils.ConsultationServBuh).WithReplyMarkup(inlineKeyboard).WithParseMode(telego.ModeHTML))
	case "ServBuhYes":
		_, _ = bot.SendSticker(tu.Sticker(tu.ID(VabTgId),
			tu.FileFromID("CAACAgIAAxkBAAEoaBZlhvb7_eVfDNHhdvVb9zOS834EYAACgQEAAiteUwteCmw-bAABeLQzBA")))
		_, _ = bot.SendMessage(tu.Message(tu.ID(VabTgId),
			fmt.Sprintf(utils.ConsultationServBuhYes, query.From.FirstName, query.From.LastName)).
			WithReplyMarkup(inlineKeyboardPeriod).WithParseMode(telego.ModeHTML))
		_, _ = bot.SendMessage(tu.Message(tu.ID(query.Message.GetChat().ID),
			utils.ConsultationMesSend).
			WithParseMode(telego.ModeHTML))
	case "Period":
		sds := strings.Split(query.Data, "_")[3]
		ids, _ := strconv.ParseInt(sds, 10, 64)
		answ_period := strings.Split(query.Data, "_")[4]
		_, _ = bot.SendMessage(tu.Message(tu.ID(VabTgId),
			fmt.Sprintf("üëç <b>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:</b> —Å–≤—è–∑—å –≤ —Ç–µ—á–µ–Ω–∏–∏ %s", answ_period)).WithParseMode(telego.ModeHTML))

		AnswerConsultation(bot, ids, answ_period)
	}
}

func AnswerConsultation(bot *telego.Bot, id_ans int64, time_ans string) {
	VabPhone := os.Getenv("VAB_PHONE")
	_, _ = bot.SendSticker(tu.Sticker(tu.ID(id_ans),
		tu.FileFromID("CAACAgIAAxkBAAEsBoFmbp43OPkseIFtScovWoy2ehKd1wACjwEAAiteUwtSWZbMUSUiwjUE")))
	_, _ = bot.SendMessage(tu.Message(tu.ID(id_ans),
		fmt.Sprintf("üí¨ <b>–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ!</b>\n<i>–í —Ç–µ—á–µ–Ω–∏–∏</i> <b>%s</b> <i>–º—ã —Å–≤—è–∂–µ–º—Å—è —Å –í–∞–º–∏ —á–µ—Ä–µ–∑ –ª–∏—á–Ω–æ–µ"+
			" —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –ø–æ–∑–≤–æ–Ω–∏–º, –µ—Å–ª–∏ –í–∞—à –Ω–æ–º–µ—Ä –Ω–µ —Å–∫—Ä—ã—Ç –≤ Telegram. üòä\n"+
			"–¢–∞–∫–∂–µ –í—ã –º–æ–∂–µ—Ç–µ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –ø–æ–∑–≤–æ–Ω–∏—Ç—å –Ω–∞–º –ø–æ –Ω–æ–º–µ—Ä—É:</i> %s", time_ans, VabPhone)).WithParseMode(telego.ModeHTML))
}

// OrdersMess - –ü–µ—Ä–µ—Ö–æ–¥ –≤ –º–µ–Ω—é –ó–∞–∫–∞–∑—ã (–≤—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö –û–§–î –∫–æ–¥–æ–≤)
func OrdersMess(bot *telego.Bot, update telego.Update) {
	var Buys, lenBuys = methods.GetDbBuyOfd(update.Message.From.ID)
	utils.DelMessage(bot, update) // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
	_, _ = bot.SendMessage(tu.Message(tu.ID(update.Message.Chat.ID),
		fmt.Sprintf("<b>üíµ –ü—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–Ω—ã–µ —Ä–∞–Ω–µ–µ –∫–æ–¥—ã –û–§–î:</b>")).WithParseMode(telego.ModeHTML))
	if lenBuys > 0 {
		for index, value := range Buys {
			_, _ = bot.SendMessage(tu.Message(tu.ID(update.Message.Chat.ID),
				fmt.Sprintf("%s. <b>%s</b> –î–∞—Ç–∞: %s\n–ü–µ—Ä–∏–æ–¥: %s. –ö–æ–¥: <code>%s</code>\n<b><a href=\"%s\">–°–º–æ—Ç—Ä–µ—Ç—å —á–µ–∫ –æ–ø–ª–∞—Ç—ã</a></b>",
					strconv.Itoa(index+1), value.OfdName, value.CreatedAt.Format("02-01-2006"), value.PeriodName, value.CodeNum, value.PurchaseLink)).WithParseMode(telego.ModeHTML))
		}
	} else {
		_, _ = bot.SendMessage(tu.Message(tu.ID(update.Message.Chat.ID),
			fmt.Sprintf("–ü—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–Ω—ã–µ –∫–æ–¥—ã –û–§–î –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç üò¢.")).WithParseMode(telego.ModeHTML))
	}
}

//.WithWebApp(tu.WebAppInfo(value.OfdLink))
